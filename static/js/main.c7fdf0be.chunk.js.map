{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.jsx","components/notes/NoteScreen.jsx","components/journal/NothingSelected.jsx","components/journal/JournalEntry.jsx","components/journal/JournalEntries.jsx","actions/ui.js","actions/auth.js","components/journal/Sidebar.jsx","components/journal/JournalScreen.jsx","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","routers/AuthRouter.jsx","routers/PublicRoute.jsx","routers/PrivateRoute.jsx","routers/AppRouter.jsx","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","respJson","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","child","push","id","data","types","addNewNote","note","type","payload","activeNote","setNotes","startSaveNote","dispatch","getState","imageUrl","noteToFirestore","doc","update","updateNote","Swal","fire","title","error","message","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","useSelector","state","active","className","style","display","onChange","e","files","text","allowOutsideClick","didOpen","showLoading","close","startUploadImage","onClick","document","getElementById","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","showCancelButton","confirmButtonText","then","result","isConfirmed","delete","NothingSelected","icon","faStar","size","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","key","setError","removeError","finishLoading","login","displayName","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","catch","logout","Sidebar","faMoon","signOut","newNote","Date","getTime","add","faCalendarPlus","JournalScreen","LoginScreen","ui","msgError","loading","isFormValid","validator","isEmail","lenght","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password1","password2","trim","length","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","localStorage","setItem","location","pathname","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","initalState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.c7fdf0be.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCzjnba2hv43mXotp3eXRGZoG7vWReHNSw\",\n    authDomain: \"react-app-cursos-a6594.firebaseapp.com\",\n    projectId: \"react-app-cursos-a6594\",\n    storageBucket: \"react-app-cursos-a6594.appspot.com\",\n    messagingSenderId: \"453455526167\",\n    appId: \"1:453455526167:web:f65b1705a185cb96a55f52\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { \n    db,\n    googleAuthProvider,\n    firebase\n};","export const fileUpload = async (file) => {\n\n    const cloudinaryUrl = 'https://api.cloudinary.com/v1_1/dbsn0szhn/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset', 'react-journal');\n    formData.append('file', file);\n\n    try {\n        const resp = await fetch(cloudinaryUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if (resp.ok) {\n            const respJson = await resp.json();\n            return respJson.secure_url;\n\n        } else {\n            throw await resp.json();\n        }\n\n\n\n    } catch (error) {\n        throw error;\n    }\n\n\n\n    //return imageUrl;\n}","import { db } from \"../firebase/firebase-config\"\n\nexport const loadNotes = async (uid) => {\n\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n\n    const notes = [];\n\n    notesSnap.forEach( child => {\n        notes.push({\n            id: child.id,\n            ...child.data()\n        })\n    })\n    \n    return notes;\n\n}","export const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n    \n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesNewEntry: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdate: '[Notes] Update note',\n    notesFileUrl: '[Notes] Update image url',\n    notesDeleted: '[Notes] Deleted note',\n    notesLogoutCleaning: '[Notes] Logout cleaning' \n\n\n}","import Swal from 'sweetalert2';\n\nimport { db } from '../firebase/firebase-config';\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { types } from '../types/types';\n\nexport const startNewNote = () => {\n\n    return async (dispatch, getState) => {\n\n        const { auth } = getState();\n        const { uid } = auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime(),\n            imageUrl: ''\n        }\n\n        Swal.fire({\n            title: 'Creando nueva nota...',\n            text: 'Por favor espere',\n            allowOutsideClick: false,\n            didOpen: () => {\n                Swal.showLoading();\n            }\n        })\n\n        try {\n\n            const doc = await db.collection(`${ uid }/journal/notes`).add(newNote);\n            dispatch(activeNote(doc.id, newNote));\n            dispatch(addNewNote(doc.id, newNote));\n            Swal.close();\n\n        } catch (error) {\n            Swal.close();\n            Swal.fire('Error', error.error.message, 'error');\n        }\n\n        \n\n    }\n\n}\n\nexport const addNewNote = (id, note) => {\n\n    return {\n        type: types.notesNewEntry,\n        payload: {\n            id,\n            ...note\n        }\n    }\n}\n\nexport const activeNote = (id, note) => {\n\n    return {\n        type: types.notesActive,\n        payload: {\n            id,\n            ...note\n        }\n    }\n\n}\n\nexport const startLoadingNotes = (uid) => {\n    \n    return async (dispatch) => {\n        const notes = await loadNotes(uid);\n        dispatch(setNotes(notes));\n    }\n\n}\n\nexport const setNotes = (notes) => {\n\n    return {\n        type: types.notesLoad,\n        payload: notes\n    }\n\n}\n\nexport const startSaveNote = (note) => {\n\n    return async (dispatch, getState) => {\n        \n        const { auth } = getState();\n        const { uid } = auth;\n        \n        if (!note.imageUrl){\n            delete note.imageUrl;\n        }\n\n        const noteToFirestore = { ...note};\n        delete noteToFirestore.id;\n\n        try {            \n            await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFirestore);\n            dispatch(updateNote(note.id, note));\n            Swal.fire('Guardado', note.title, 'success');\n\n        } catch (error) {\n            Swal.fire('Error', error.error.message, 'error');\n        }\n        \n    }\n\n}\n\nexport const updateNote = (id, note) => {\n\n    return {\n        type: types.notesUpdate,\n        payload: {\n            id,\n            note: {\n                id,\n                ...note\n            }\n        }\n    }\n}\n\nexport const startUploadImage = (file) =>{\n\n    return async (dispatch, getState) => {\n\n        Swal.fire({\n            title: 'Subiendo...',\n            text: 'Por favor espere',\n            allowOutsideClick: false,\n            didOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const { active: note } = getState().notes;\n\n        try {\n            const imageUrl = await fileUpload(file);\n            note.imageUrl = imageUrl;\n\n            Swal.close();\n\n            dispatch(startSaveNote(note));\n\n        } catch (error) {\n            Swal.close();\n            Swal.fire('Error', error.error.message, 'error');\n        }        \n\n    }\n}\n\nexport const deleteNote = (id) => {\n    \n    return {\n        type: types.notesDeleted,\n        payload: id\n    }\n}\n\n\nexport const startDeleteNote = (id) => {\n\n    return (dispatch, getState) => {\n\n        const { auth } = getState();\n        const { uid } = auth;\n\n        Swal.fire({\n            title: '¿Seguro que dese eliminar la nota?',\n            showCancelButton: true,\n            confirmButtonText: `Sí`\n        }).then(async (result) => {\n            \n            if (result.isConfirmed) {\n\n                Swal.fire({\n                    title: 'Eliminado...',\n                    text: 'Por favor espere',\n                    allowOutsideClick: false,\n                    didOpen: () => {\n                        Swal.showLoading();\n                    }\n                })\n\n                try {\n                    await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n                    dispatch(deleteNote(id));\n                    Swal.close();\n                } catch (error) {\n                    Swal.fire('Error', error.error.message, 'error');\n                    Swal.close();\n                }\n\n            }\n\n        })\n\n    }\n\n}\n\nexport const noteLogout = () => {\n\n    return {\n        type: types.notesLogoutCleaning\n    }\n\n}","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues(newFormState);\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    }\n\n    return [values, handleInputChange, reset];\n}\n\nexport default useForm;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploadImage } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch()\n    const { active: note } = useSelector(state => state.notes);\n\n    const handleSave = () => {\n\n        dispatch(startSaveNote(note));\n        \n    }\n\n    const handlePictureUpload = () => {\n        document.getElementById('inputFileId').click()\n    }\n\n    const handleFileChange = (e) => {\n\n        const file = e.target.files;\n\n        if (file) {\n            dispatch(startUploadImage(file[0]));\n        }\n\n    }\n\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            <input\n                id=\"inputFileId\"\n                type=\"file\" \n                style={{display: 'none'}}\n                onChange={ handleFileChange }\n            \n            />\n\n\n            <div>\n                <button className=\"btn\" onClick={ handlePictureUpload }>\n                    Imagen\n                </button>\n                \n                <button className=\"btn\" onClick={ handleSave }>\n                    Guardar\n                </button>\n            </div>\n        </div>\n    )\n}","import React, { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeNote, startDeleteNote } from '../../actions/notes';\nimport useForm from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar';\n\nexport const NoteScreen = () => {\n\n    const { active: note } = useSelector(state => state.notes);\n\n    const [formValues, handleInputChange, reset] = useForm(note);\n\n    //console.log('note', note)\n    if(!formValues.imageUrl && note.imageUrl) formValues.imageUrl = note.imageUrl;\n    //console.log('formValues', formValues)\n    \n\n    const { title, body } = formValues;\n\n    const activeId = useRef(note.id);\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(startDeleteNote(note.id));\n    }\n\n    useEffect(() => {\n       \n        if (note.id !== activeId.current) {\n            reset(note);\n            activeId.current = note.id;\n        }\n\n    }, [note, reset]);\n\n    useEffect(() => {\n        \n\n        dispatch(activeNote(formValues.id, {...formValues}));\n\n    }, [formValues, dispatch]);\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n                <input \n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Algún título\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    name=\"body\"\n                    placeholder=\"¿Qué pasó hoy?\"\n                    className=\"notes__textarea\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                ></textarea>\n                \n                {\n                    note.imageUrl  && (\n                        <div className=\"notes__image\">\n                            <img src={ note.imageUrl } alt=\"imagen\" />\n                        </div>\n                    )\n                }\n                \n            </div>\n\n            <button className=\"btn btn-danger\" onClick={ handleDelete }>\n                Borrar\n            </button>\n        </div>\n    )\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Seleccione algo\n                <br />\n                Cree una nueva entrada\n            </p>\n\n            <FontAwesomeIcon icon={ faStar } className=\"mt-5\" size=\"4x\" />\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({\n    id,\n    title,\n    body,\n    date,\n    imageUrl\n}) => {\n\n    const noteDate = moment(date);\n\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n\n        const note = {\n            title,\n            body,\n            date,\n            imageUrl\n        };\n        \n        dispatch(activeNote(id, note));\n    }\n\n    return (\n        <div className=\"journal__entry animate__animated animate__fadeIn animate__faster\" onClick={ handleEntryClick } >\n\n            {\n                imageUrl && (\n                    <div \n                        className=\"journal__entry-picture\"\n                        style={{\n                            backgroundSize: 'cover',\n                            backgroundImage: `url(${ imageUrl })`\n                        }}\n                    >\n\n                    </div>\n                )\n            }            \n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title }\n                </p>\n\n                <p className=\"journal__entry-content\">\n                    { body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>\n                    {\n                        noteDate.format('dddd')\n                    }\n                </span>\n                <h4>\n                    {\n                        noteDate.format('Do')\n                    }\n                </h4>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes);\n\n    \n    return (\n        <div className=\"journal__entries pointer\">\n            {\n                notes.map(note => (\n                    <JournalEntry key={ note.id } {...note} />\n                ))\n            }\n        </div>\n    )\n}","import { types } from '../types/types';\n\nexport const setError = (error) => {\n    return {\n        type: types.uiSetError,\n        payload: error\n    }\n}\n\nexport const removeError = () => {\n    return {\n        type: types.uiRemoveError\n    }\n}\n\nexport const startLoading = () => {\n\n    return {\n        type: types.uiStartLoading\n    }\n\n}\n\nexport const finishLoading = () => {\n\n    return {\n        type: types.uiFinishLoading\n    }\n    \n}","import Swal from 'sweetalert2';\n\n// Para hacer peticiones async se utiliza thunk que se configura en el store. Su implementación retorna una función que como argumento tiene un dispatch\n\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { noteLogout } from './notes';\nimport { finishLoading, startLoading } from './ui';\n\nexport const login = (uid, displayName) => {\n\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            displayName\n        }\n    }\n}\n\nexport const startLoginEmailPassword = (email, password) => {\n\n    return (dispatch) => {\n\n        dispatch(startLoading());\n\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(({ user }) => {\n                \n                dispatch(login(user.uid, user.displayName))\n                dispatch(finishLoading());\n\n            }).catch( error => {\n                Swal.fire('Error', error.message, 'error')\n                dispatch(finishLoading());\n            })\n\n\n        // setTimeout(() => {\n        //     dispatch(login(email, password));\n        // }, 3000);\n    }\n\n}\n\nexport const startGoogleLogin = () => {\n    \n    return (dispatch) => {\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then(({ user }) => {\n\n                dispatch(login(user.uid, user.displayName))\n            \n            })\n    }\n\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n\n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then( async ({ user }) => {\n\n                await user.updateProfile({ displayName: name });\n\n                dispatch(login(user.uid, user.displayName));\n\n            }).catch( error => {\n                Swal.fire('Error', error.message, 'error')\n            })\n    }\n}\n\nexport const starLogout = () => {\n\n    return async (dispatch) => {\n\n        await firebase.auth().signOut();\n\n        dispatch(logout());\n        dispatch(noteLogout())\n    }\n};\n\nexport const logout = () => {\n    \n    return {\n        type: types.logout\n    }\n    \n}","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon, faCalendarPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { JournalEntries } from './JournalEntries';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { starLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n\n    const { name } = useSelector(state => state.auth);\n\n\n    const handleLogout = () => {        \n        dispatch(starLogout());        \n    }\n\n    const hanldeNewEntry = () => {\n        dispatch(startNewNote())\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <FontAwesomeIcon icon={ faMoon } /> \n                    <span> { name } </span>\n                </h3>\n\n                <button\n                    className=\"btn\"\n                    onClick={ handleLogout }\n                >\n                    Salir\n                </button>\n            </div>\n\n            <div className=\"journal__new-entry\"\n                onClick={ hanldeNewEntry }        \n            >\n                <FontAwesomeIcon icon={ faCalendarPlus } size=\"5x\" />\n                <p className=\"mt-5\"> Nueva entrada </p>\n\n\n            </div>\n\n            <JournalEntries />\n            \n        </aside>\n    )\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { Sidebar } from './Sidebar';\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes);\n\n    return (\n        <div className=\"journal_main-content animate__animated animate__fadeIn animate__faster\">\n            <Sidebar />\n\n            <main>\n\n                {\n                    active ? (<NoteScreen />) : (<NothingSelected />)\n                }\n\n            </main>\n        </div>\n    )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\n\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { setError, removeError } from '../../actions/ui';\nimport useForm from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    // Para ocupar una parte del state de redux\n    const state = useSelector(state => state.ui);\n    const { msgError, loading } = state;\n\n    const [{ email, password }, handleInputChange] = useForm({\n        email: 'ivanc.contre@gmail.com',\n        password: '123456'\n    });\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        if (isFormValid()) {\n            dispatch(startLoginEmailPassword(email, password));\n        }        \n    }\n\n    const handleGoogleLogin = () => {\n        dispatch(startGoogleLogin());\n    }\n\n    const isFormValid = () => {\n\n        if (!validator.isEmail(email)) {\n\n            dispatch(setError('Email is not valid'));\n            return false;\n\n        } else if (!password || password.lenght < 5) {\n\n            dispatch(setError('Password should be at least 6 characteres and match each other'));\n            return false;\n\n        }\n\n        dispatch(removeError());\n\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Iniciar sesión</h3>\n\n            <form onSubmit={ handleLogin } className=\"animate__animated animate__fadeIn animate__faster\">\n\n                {\n                        \n                        msgError &&\n                        (\n                            <div className=\"auth__alert-error\">\n                                { msgError }\n                            </div>\n                        )\n                }   \n                \n                <input \n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Correo\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Contraseña\"\n                    name=\"password\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    disabled={ loading }\n                    className=\"btn btn-primary btn-block\"\n                    type=\"submit\"\n                >\n                    Ingresar\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Ingresar con google</p>\n\n                    <div \n                        onClick={ handleGoogleLogin }\n                        className=\"google-btn\"\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"    \n                >\n                    Crea una nueva cuenta\n                </Link>\n\n            </form>\n        </>\n    )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\n\nimport useForm from '../../hooks/useForm';\nimport { setError, removeError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n\n    // Para ocupar una parte del state de redux\n    const state = useSelector(state => state.ui);\n\n    const { msgError } = state;\n\n    const [{name, email, password1, password2}, handleInputChange] = useForm({\n        name: 'Iván',\n        email: 'ivanc.contre@gmail.com',\n        password1: '123456',\n        password2: '123456'\n    });\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (isFormValid()) {\n            dispatch(startRegisterWithEmailPasswordName(email, password1, name));\n        }        \n    }\n\n    const isFormValid = () => {\n\n        if (name.trim().length === 0) {\n\n            dispatch(setError('Name is required'));\n            return false;\n\n        } else if (!validator.isEmail(email)) {\n\n            dispatch(setError('Email is not valid'));\n            return false;\n\n        } else if (password1 !== password2 || password1.lenght < 5) {\n\n            dispatch(setError('Password should be at least 6 characteres and match each other'));\n            return false;\n\n        }\n\n        dispatch(removeError());\n\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Registro</h3>\n\n            <form onSubmit={ handleRegister } className=\"animate__animated animate__fadeIn animate__faster\">\n\n                {\n                    \n                        msgError &&\n                        (\n                            <div className=\"auth__alert-error\">\n                                { msgError }\n                            </div>\n                        )\n                }                \n\n                <input \n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Nombre\"\n                    name=\"name\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Correo\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Contraseña\"\n                    name=\"password1\"\n                    value={ password1 }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Confirmar contraseña\"\n                    name=\"password2\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    className=\"btn btn-primary btn-block mb-5\"\n                    type=\"submit\"\n                >\n                    Registrar\n                </button>\n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"    \n                >\n                    ¿Ya registrado?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n\n            <div className=\"auth__box-container\">\n                <Switch>\n\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\n\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\n\n                    <Redirect to=\"/auth/login\" />\n\n                </Switch>\n            </div>\n            \n        </div>\n        \n    )\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route \n            { ...rest }\n\n            component={ (props) => (\n\n                (!isAuthenticated) \n                ? (<Component { ...props } />)\n\n                : (<Redirect to=\"/\" />)\n\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    \n\n    localStorage.setItem('lastPath', rest.location.pathname)\n\n\n    return (\n        <Route \n            { ...rest }\n\n            component={ (props) => (\n\n                (isAuthenticated) \n                ? (<Component { ...props } />)\n\n                : (<Redirect to=\"/auth/login\" />)\n\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n    HashRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\n\nimport { firebase } from '../firebase/firebase-config'\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [ checking, setChecking ] = useState(true);\n    const [ isLoggedIn, setIsLoggedIn] = useState(false);\n\n\n    useEffect(() => {\n        \n        firebase.auth().onAuthStateChanged( user => {\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName));\n                setIsLoggedIn(true);\n\n                dispatch(startLoadingNotes(user.uid));\n\n            } else {\n                setIsLoggedIn(false);\n            }\n\n            setChecking(false);\n        });\n\n\n\n    }, [ dispatch, setChecking, setIsLoggedIn ]);\n\n    if (checking) {\n        return (<h1>Waiting...</h1>)\n    }\n\n    return (\n        <Router>\n\n            <div>\n                \n                <Switch>\n                    \n                    <PublicRoute\n                        isAuthenticated={ isLoggedIn }\n                        component={ AuthRouter }\n                        path=\"/auth\"                    \n                    />\n\n                    <PrivateRoute\n                        isAuthenticated={ isLoggedIn }\n                        component={ JournalScreen }\n                        path=\"/\"\n                        exact\n\n                    \n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                    {/* <Route path=\"/auth\" component={ AuthRouter } />\n\n                    <Route exact path=\"/\" component={ JournalScreen } /> \n\n                    <Redirect to=\"/auth/login\" />*/}\n\n                </Switch>\n            \n            </div>\n\n        </Router>\n    )\n}","/*\n    {\n        notes: [],\n        active: null,\n        active: {\n            id: 'dfsdfsdsaf,\n            title: '',\n            body: '',\n            imageUrl: '',\n            date: 235435434\n        }\n    }\n\n\n\n*/\n\nimport { types } from \"../types/types\";\n\nconst initalState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = (state = initalState, action) => {\n    switch (action.type) {\n\n        case types.notesActive:\n\n            return {\n                ...state,\n                active: { // o active: action.payload\n                    ...action.payload\n                }\n            };\n\n        case types.notesNewEntry:\n            \n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n\n        case types.notesLoad:\n            \n            return {\n                ...state,\n                notes: [...action.payload],\n                \n            };\n\n        case types.notesUpdate:\n\n            return {\n                ...state,\n                notes: state.notes.map((note) => {\n                    if (action.payload.id === note.id) {\n                        return action.payload.note\n                    } else { \n                        return note;\n                    }\n                })\n\n                //notes: state.notes.map( note => action.payload.id === note.id ? action.payload.note : note)\n            }\n\n        case types.notesDeleted:\n\n            return {\n                ...state,\n                notes: state.notes.filter(note => note.id !== action.payload),\n                active: null\n            }\n\n        case types.notesLogoutCleaning:\n\n            return {\n                notes: [],\n                active: null\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n};\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            };\n\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            };\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            };\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            };\n    \n        default:\n            return state;\n    }\n\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(thunk))\n);","/*\n    {\n        uid: 21312323,\n        name: 'Iván'\n    }\n\n*/\n\n// para llamar a los casos del switch se utiliza el dispatch, en donde se le pasa como parámetro alguna función definida en los actions. Luego el disptach interactúa con el store\n\nimport { types } from \"../types/types\";\n\n\nexport const authReducer = (state = {}, action) => {\n\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n            \n        case types.logout:\n            return {};\n    \n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nimport 'animate.css';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store } >\n            <AppRouter />\n        </Provider>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  \t<JournalApp />,\n  \tdocument.getElementById('root')\n);"],"sourceRoot":""}