{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNote.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.jsx","components/notes/NoteScreen.jsx","components/journal/NothingSelected.jsx","components/journal/JournalEntry.jsx","components/journal/JournalEntries.jsx","actions/ui.js","actions/auth.js","components/journal/Sidebar.jsx","components/journal/JournalScreen.jsx","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","routers/AuthRouter.jsx","routers/PublicRoute.jsx","routers/PrivateRoute.jsx","components/loading/Loading.jsx","routers/AppRouter.jsx","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.jsx","index.jsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","respJson","secure_url","loadNote","uid","noteid","collection","doc","get","noteSnap","data","loadNotes","notesSnap","notes","forEach","child","push","id","types","addNewNote","note","type","payload","activeNote","startLoadingNotes","dispatch","setNotes","Promise","resolve","reject","startLoadNote","getState","startSaveNote","imageUrl","noteToFirestore","update","updateNote","startUploadImage","active","deleteNote","startDeleteNote","delete","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","useSelector","state","currentDate","moment","format","handleSave","Swal","fire","console","log","handleFileChange","e","files","title","text","allowOutsideClick","didOpen","showLoading","close","className","style","display","onChange","onClick","document","getElementById","click","icon","faImage","faSave","NoteScreen","formValues","history","useHistory","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","showCancelButton","confirmButtonText","then","result","isConfirmed","catch","error","faTrash","NothingSelected","faStar","size","JournalEntry","date","noteDate","params","useParams","noteId","backgroundSize","backgroundImage","JournalEntries","map","key","setError","removeError","finishLoading","login","displayName","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","message","logout","Sidebar","hanldeNewEntry","newNote","Date","getTime","add","faMoon","signOut","faSignOutAlt","faCalendarPlus","JournalScreen","LoginScreen","ui","msgError","loading","isFormValid","validator","isEmail","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password1","password2","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","localStorage","setItem","location","pathname","Loading","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","initalState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.11713846.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\n\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { \n    db,\n    googleAuthProvider,\n    firebase\n};","export const fileUpload = async (file) => {\n\n    const cloudinaryUrl = 'https://api.cloudinary.com/v1_1/dbsn0szhn/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset', 'react-journal');\n    formData.append('file', file);\n\n    try {\n        const resp = await fetch(cloudinaryUrl, {\n            method: 'POST',\n            body: formData\n        });\n\n        if (resp.ok) {\n            const respJson = await resp.json();\n            return respJson.secure_url;\n\n        } else {\n            return null;\n        }\n\n\n\n    } catch (error) {\n        throw error;\n    }\n\n\n\n    //return imageUrl;\n}","import { db } from \"../firebase/firebase-config\"\n\nexport const loadNote = async (uid, noteid) => {\n    const noteSnap = await db.collection(`${ uid }/journal/notes`).doc(noteid).get()\n\n    return noteSnap.data();\n}","import { db } from \"../firebase/firebase-config\"\n\nexport const loadNotes = async (uid) => {\n\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n\n    const notes = [];\n\n    notesSnap.forEach( child => {\n        notes.push({\n            id: child.id,\n            ...child.data()\n        })\n    })\n    \n    return notes;\n\n}","export const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n    \n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesNewEntry: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdate: '[Notes] Update note',\n    notesFileUrl: '[Notes] Update image url',\n    notesDeleted: '[Notes] Deleted note',\n    notesLogoutCleaning: '[Notes] Logout cleaning' ,\n    notesInactives: '[Notes] Set inactive note',\n\n\n}","import { db } from '../firebase/firebase-config';\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNote } from '../helpers/loadNote';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { types } from '../types/types';\n\nexport const startNewNote = () => {\n\n    return async (dispatch, getState) => {\n\n        const { auth } = getState();\n        const { uid } = auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime(),\n            imageUrl: ''\n        }\n\n        try {\n            const doc = await db.collection(`${ uid }/journal/notes`).add(newNote);\n            dispatch(activeNote(doc.id, newNote));\n            dispatch(addNewNote(doc.id, newNote));\n            return Promise.resolve();            \n\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    }\n}\n\nexport const addNewNote = (id, note) => {\n\n    return {\n        type: types.notesNewEntry,\n        payload: {\n            id,\n            ...note\n        }\n    }\n}\n\nexport const activeNote = (id, note) => {\n\n    return {\n        type: types.notesActive,\n        payload: {\n            id,\n            ...note\n        }\n    }\n\n}\n\nexport const inactivesNotes = () => {\n    return {\n        type: types.notesInactives\n    }\n}\n\nexport const startLoadingNotes = (uid) => {\n    \n    return async (dispatch) => {\n\n        try {\n            const notes = await loadNotes(uid);\n            dispatch(setNotes(notes));\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject(error);\n        }\n        \n    }\n\n}\n\nexport const startLoadNote = (id) => {\n\n    return async (dispatch, getState) => {\n        const { auth } = getState();\n        const { uid } = auth;\n\n        try {\n            const note = await loadNote(uid, id);\n\n            if (note) {\n                dispatch(activeNote(id, note));\n                return Promise.resolve();\n            } else {                \n                return Promise.reject('No existe la nota indicada por URL');\n            }\n\n        } catch (error) {\n            return Promise.reject(error);\n        }        \n    }\n\n}\n\nexport const setNotes = (notes) => {\n\n    return {\n        type: types.notesLoad,\n        payload: notes\n    }\n\n}\n\nexport const startSaveNote = (note) => {\n\n    return async (dispatch, getState) => {\n        \n        const { auth } = getState();\n        const { uid } = auth;\n        \n        if (!note.imageUrl){\n            delete note.imageUrl;\n        }\n\n        const noteToFirestore = { ...note};\n        delete noteToFirestore.id;\n\n        try {\n\n            await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFirestore);\n            dispatch(updateNote(note.id, note));\n            return Promise.resolve();\n\n        } catch (error) {\n            return Promise.reject(error);\n        }        \n    }\n\n}\n\nexport const updateNote = (id, note) => {\n\n    return {\n        type: types.notesUpdate,\n        payload: {\n            id,\n            note: {\n                id,\n                ...note\n            }\n        }\n    }\n}\n\nexport const startUploadImage = (file) =>{\n\n    return async (dispatch, getState) => {\n\n        const { active: note } = getState().notes;\n\n        try {\n            const imageUrl = await fileUpload(file);\n            note.imageUrl = imageUrl;            \n\n            dispatch(startSaveNote(note));\n\n        } catch (error) {\n            return Promise.reject(error);\n        }        \n\n    }\n}\n\nexport const deleteNote = (id) => {\n    \n    return {\n        type: types.notesDeleted,\n        payload: id\n    }\n}\n\n\nexport const startDeleteNote = (id) => {\n\n    return async (dispatch, getState) => {\n\n        const { auth } = getState();\n        const { uid } = auth;\n\n        try {\n            await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n            dispatch(deleteNote(id));\n            return Promise.resolve();\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    }\n}\n\nexport const noteLogout = () => {\n\n    return {\n        type: types.notesLogoutCleaning\n    }\n\n}","import { useState } from 'react';\n\nconst useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues(newFormState);\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    }\n\n    return [values, handleInputChange, reset];\n}\n\nexport default useForm;","import React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage, faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport { startSaveNote, startUploadImage } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch()\n    const { active: note } = useSelector(state => state.notes);\n\n    const currentDate = moment().format('DD MMMM YYYY');\n\n    const handleSave = async () => {\n\n        try {\n            await dispatch(startSaveNote(note));\n            Swal.fire('Guardado', 'Nota actualizada correctamente', 'success');\n        } catch (error) {\n            console.log(error)\n            Swal.fire('Error', '', 'error');\n        }   \n        \n    }\n\n    const handlePictureUpload = () => {\n        document.getElementById('inputFileId').click()\n    }\n\n    const handleFileChange = async (e) => {\n\n        const file = e.target.files;\n\n        if (file) {\n            \n            Swal.fire({\n                title: 'Subiendo...',\n                text: 'Por favor espere',\n                allowOutsideClick: false,\n                didOpen: () => {\n                    Swal.showLoading();\n                }\n            });\n\n            try {\n                await dispatch(startUploadImage(file[0]));\n                Swal.close();\n            } catch (error) {\n                console.log(error);\n                Swal.close();\n                Swal.fire('Error', '', 'error');\n            }            \n        }\n\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>{ currentDate }</span>\n\n            <input\n                id=\"inputFileId\"\n                type=\"file\" \n                style={{display: 'none'}}\n                onChange={ handleFileChange }\n            \n            />\n\n\n            <div>\n                <button className=\"btn\" onClick={ handlePictureUpload }>\n                    <FontAwesomeIcon icon={ faImage } /> \n                    <span> Imagen </span> \n                </button>\n                \n                <button className=\"btn\" onClick={ handleSave }>\n                    <FontAwesomeIcon icon={ faSave } /> \n                    <span> Guardar </span> \n                    \n                </button>\n            </div>\n        </div>\n    )\n}","import React, { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Swal from 'sweetalert2';\n\nimport { activeNote, startDeleteNote } from '../../actions/notes';\nimport useForm from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar';\nimport { useHistory } from 'react-router-dom';\n\nexport const NoteScreen = () => {\n\n    const { active: note } = useSelector(state => state.notes);\n\n    const [formValues, handleInputChange, reset] = useForm(note);\n\n    const history = useHistory();\n\n    //console.log('note', note)\n    if(!formValues.imageUrl && note.imageUrl) formValues.imageUrl = note.imageUrl;\n    //console.log('formValues', formValues)\n    \n\n    const { title, body } = formValues;\n\n    const activeId = useRef(note.id);\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n\n        Swal.fire({\n            title: '¿Seguro que desea eliminar la nota?',\n            showCancelButton: true,\n            confirmButtonText: `Sí`\n        }).then(async (result) => {\n            \n            if (result.isConfirmed) {\n                \n                Swal.fire({\n                    title: 'Eliminando...',\n                    text: 'Por favor espere',\n                    allowOutsideClick: false,\n                    didOpen: () => {\n                        Swal.showLoading();\n                    }\n                });\n\n                try {\n                    await dispatch(startDeleteNote(note.id));\n                    history.push('/');\n                    Swal.close();\n                } catch (error) {\n                    Swal.close();\n                    Swal.fire('Error', '', 'error');\n                } \n            }\n\n        })\n        .catch(error => {\n            Swal.fire('Error', error, 'error');\n        });        \n    }\n\n    useEffect(() => {\n       \n        if (note.id !== activeId.current) {\n            reset(note);\n            activeId.current = note.id;\n        }\n\n    }, [note, reset]);\n\n    useEffect(() => {\n        \n\n        dispatch(activeNote(formValues.id, {...formValues}));\n\n    }, [formValues, dispatch]);\n\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n                <input \n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Algún título\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={ title }\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    name=\"body\"\n                    placeholder=\"¿Qué pasó hoy?\"\n                    className=\"notes__textarea\"\n                    value={ body }\n                    onChange={ handleInputChange }\n                ></textarea>\n                \n                {\n                    note.imageUrl  && (\n                        <div className=\"notes__image\">\n                            <img src={ note.imageUrl } alt=\"imagen\" />\n                        </div>\n                    )\n                }\n                \n            </div>\n\n            <button className=\"btn btn-danger\" onClick={ handleDelete }>\n                <FontAwesomeIcon icon={ faTrash } /> \n                <span> Borrar </span> \n            </button>\n        </div>\n    )\n}","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Seleccione algo\n                <br />\n                Cree una nueva entrada\n            </p>\n\n            <FontAwesomeIcon icon={ faStar } className=\"mt-5\" size=\"4x\" />\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\nimport { useParams, useHistory } from 'react-router-dom';\n\nexport const JournalEntry = ({\n    id,\n    title,\n    body,\n    date,\n    imageUrl\n}) => {\n\n    const noteDate = moment(date);\n\n    const dispatch = useDispatch();\n\n    const history = useHistory();\n\n    const params = useParams();\n\n    const { active } = useSelector(state => state.notes);\n\n    const handleEntryClick = () => {\n        \n        const note = {\n            title,\n            body,\n            date,\n            imageUrl\n        };\n\n        dispatch(activeNote(id, note));\n\n        if (params.noteId !== id) {\n            history.push(`/${ id }`); \n            //window.history.pushState(null, null, `#/${ id }`);\n        } \n\n    }\n    \n    return (\n        <div className={'journal__entry' + (active?.id === id ? ' journal__entry-active' : '')} onClick={ handleEntryClick } >\n\n            {\n                imageUrl && (\n                    <div \n                        className=\"journal__entry-picture\"\n                        style={{\n                            backgroundSize: 'cover',\n                            backgroundImage: `url(${ imageUrl })`\n                        }}\n                    >\n\n                    </div>\n                )\n            }            \n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title }\n                </p>\n\n                <p className=\"journal__entry-content\">\n                    { body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>\n                    {\n                        noteDate.format('dddd')\n                    }\n                </span>\n                <h4>\n                    {\n                        noteDate.format('Do')\n                    }\n                </h4>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes);\n\n    return (\n        <div className=\"journal__entries pointer\">\n            {\n                notes.map(note => (\n                    <JournalEntry key={ note.id } {...note} />\n                ))\n            }\n        </div>\n    )\n}","import { types } from '../types/types';\n\nexport const setError = (error) => {\n    return {\n        type: types.uiSetError,\n        payload: error\n    }\n}\n\nexport const removeError = () => {\n    return {\n        type: types.uiRemoveError\n    }\n}\n\nexport const startLoading = () => {\n\n    return {\n        type: types.uiStartLoading\n    }\n\n}\n\nexport const finishLoading = () => {\n\n    return {\n        type: types.uiFinishLoading\n    }\n    \n}","import Swal from 'sweetalert2';\n\n// Para hacer peticiones async se utiliza thunk que se configura en el store. Su implementación retorna una función que como argumento tiene un dispatch\n\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport { noteLogout } from './notes';\nimport { finishLoading, startLoading } from './ui';\n\nexport const login = (uid, displayName) => {\n\n    return {\n        type: types.login,\n        payload: {\n            uid,\n            displayName\n        }\n    }\n}\n\nexport const startLoginEmailPassword = (email, password) => {\n\n    return (dispatch) => {\n\n        dispatch(startLoading());\n\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then(({ user }) => {\n                \n                dispatch(login(user.uid, user.displayName))\n                dispatch(finishLoading());\n\n            }).catch( error => {\n                Swal.fire('Error', error.error.message, 'error')\n                dispatch(finishLoading());\n            })\n    }\n\n}\n\nexport const startGoogleLogin = () => {\n    \n    return (dispatch) => {\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then(({ user }) => {\n\n                dispatch(login(user.uid, user.displayName))\n            \n            }).catch( error => {\n                Swal.fire('Error', error.error.message, 'error')\n            })\n    }\n\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n\n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then( async ({ user }) => {\n\n                try {\n\n                    await user.updateProfile({ displayName: name });\n                    dispatch(login(user.uid, user.displayName));\n\n                } catch (error) {\n                    Swal.fire('Error', error.error.message, 'error');\n                }\n                \n\n            }).catch( error => {\n                Swal.fire('Error', error.error.message, 'error');\n            })\n    }\n}\n\nexport const starLogout = () => {\n\n    return (dispatch) => {        \n\n        Swal.fire({\n            title: '¿Seguro que desea cerrar sesión?',\n            showCancelButton: true,\n            confirmButtonText: `Sí`\n        }).then(async (result) => {\n            \n            if (result.isConfirmed) {\n\n                try {\n\n                    await firebase.auth().signOut();\n                    dispatch(logout());\n                    dispatch(noteLogout());\n\n                } catch (error) {\n                    Swal.fire('Error', error.error.message, 'error');\n                }                \n            }\n\n        })\n    }\n};\n\nexport const logout = () => {\n    \n    return {\n        type: types.logout\n    }\n    \n}","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon, faCalendarPlus, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\n\nimport { JournalEntries } from './JournalEntries';\nimport { starLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\n\nexport const Sidebar = () => {\n    \n    const dispatch = useDispatch();\n\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {        \n        dispatch(starLogout());        \n    }\n\n    const hanldeNewEntry = async () => {\n        Swal.fire({\n            title: 'Creando nueva nota...',\n            text: 'Por favor espere',\n            allowOutsideClick: false,\n            didOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        try {\n            await dispatch(startNewNote());\n            Swal.close();\n        } catch (error) {\n            console.log(error);\n            Swal.close();\n            Swal.fire('Error', error, 'error');\n        }\n        \n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <FontAwesomeIcon icon={ faMoon } /> \n                    <span> { name } </span>\n                </h3>\n\n                <button\n                    className=\"btn\"\n                    onClick={ handleLogout }\n                >\n                    <FontAwesomeIcon icon={ faSignOutAlt } /> \n                    <span> Salir </span> \n                    \n                </button>\n            </div>\n\n            <div className=\"journal__new-entry\"\n                onClick={ hanldeNewEntry }        \n            >\n                <FontAwesomeIcon icon={ faCalendarPlus } size=\"5x\" />\n                <p className=\"mt-5\"> Nueva entrada </p>\n\n\n            </div>\n\n            <JournalEntries />\n            \n        </aside>\n    )\n}\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\nimport { inactivesNotes, startLoadNote } from '../../actions/notes';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { NothingSelected } from './NothingSelected';\nimport { Sidebar } from './Sidebar';\n\nexport const JournalScreen = () => {    \n\n    const params = useParams();\n    const dispatch = useDispatch();    \n    const history = useHistory();\n\n    useEffect(() => {\n\n        const loadNote = async () => {\n            try {\n                await dispatch(startLoadNote(params.noteId));\n            } catch (error) {\n                console.log(error);\n                Swal.fire('Error', '', 'error');\n                history.push('/');\n            }            \n        }\n\n        if (params.noteId) {    \n            loadNote();            \n        } else {\n            dispatch(inactivesNotes());\n        }\n\n    }, [dispatch, params.noteId, history]);\n\n    const { active } = useSelector(state => state.notes);\n\n    return (\n        <div className=\"journal_main-content\">\n            <Sidebar />\n\n            <main>\n\n                {\n                    active ? (<NoteScreen />) : (<NothingSelected />)\n                }\n\n            </main>\n        </div>\n    )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\n\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { setError, removeError } from '../../actions/ui';\nimport useForm from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    // Para ocupar una parte del state de redux\n    const state = useSelector(state => state.ui);\n    const { msgError, loading } = state;\n\n    const [{ email, password }, handleInputChange] = useForm({\n        email: 'ivanc.contre@gmail.com',\n        password: ''\n    });\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        if (isFormValid()) {\n            dispatch(startLoginEmailPassword(email, password));\n        }        \n    }\n\n    const handleGoogleLogin = () => {\n        dispatch(startGoogleLogin());\n    }\n\n    const isFormValid = () => {\n\n        if (!validator.isEmail(email)) {\n\n            dispatch(setError('Email is not valid'));\n            return false;\n\n        } else if (!password || password.length < 5) {\n\n            dispatch(setError('Password should be at least 6 characteres and match each other'));\n            return false;\n\n        }\n\n        dispatch(removeError());\n\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Iniciar sesión</h3>\n\n            <form onSubmit={ handleLogin } className=\"animate__animated animate__fadeIn animate__faster\">\n\n                {\n                        \n                        msgError &&\n                        (\n                            <div className=\"auth__alert-error\">\n                                { msgError }\n                            </div>\n                        )\n                }   \n                \n                <input \n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Correo\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Contraseña\"\n                    name=\"password\"\n                    value={ password }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    disabled={ loading }\n                    className=\"btn btn-primary btn-block\"\n                    type=\"submit\"\n                >\n                    Ingresar\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Ingresar con google</p>\n\n                    <div \n                        onClick={ handleGoogleLogin }\n                        className=\"google-btn\"\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"    \n                >\n                    Crea una nueva cuenta\n                </Link>\n\n            </form>\n        </>\n    )\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\n\nimport useForm from '../../hooks/useForm';\nimport { setError, removeError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n\n    // Para ocupar una parte del state de redux\n    const state = useSelector(state => state.ui);\n\n    const { msgError } = state;\n\n    const [{name, email, password1, password2}, handleInputChange] = useForm({\n        name: 'Iván',\n        email: 'ivanc.contre@gmail.com',\n        password1: '',\n        password2: ''\n    });\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (isFormValid()) {\n            dispatch(startRegisterWithEmailPasswordName(email, password1, name));\n        }        \n    }\n\n    const isFormValid = () => {\n\n        if (name.trim().length === 0) {\n\n            dispatch(setError('Name is required'));\n            return false;\n\n        } else if (!validator.isEmail(email)) {\n\n            dispatch(setError('Email is not valid'));\n            return false;\n\n        } else if (password1 !== password2 || password1.length < 5) {\n\n            dispatch(setError('Password should be at least 6 characteres and match each other'));\n            return false;\n\n        }\n\n        dispatch(removeError());\n\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Registro</h3>\n\n            <form onSubmit={ handleRegister } className=\"animate__animated animate__fadeIn animate__faster\">\n\n                {\n                    \n                        msgError &&\n                        (\n                            <div className=\"auth__alert-error\">\n                                { msgError }\n                            </div>\n                        )\n                }                \n\n                <input \n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Nombre\"\n                    name=\"name\"\n                    autoComplete=\"off\"\n                    value={ name }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    className=\"auth__input\"\n                    type=\"text\"\n                    placeholder=\"Correo\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Contraseña\"\n                    name=\"password1\"\n                    value={ password1 }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    className=\"auth__input\"\n                    type=\"password\"\n                    placeholder=\"Confirmar contraseña\"\n                    name=\"password2\"\n                    value={ password2 }\n                    onChange={ handleInputChange }\n                />\n\n                <button\n                    className=\"btn btn-primary btn-block mb-5\"\n                    type=\"submit\"\n                >\n                    Registrar\n                </button>\n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"    \n                >\n                    ¿Ya registrado?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n\n            <div className=\"auth__box-container\">\n                <Switch>\n\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\n\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\n\n                    <Redirect to=\"/auth/login\" />\n\n                </Switch>\n            </div>\n            \n        </div>\n        \n    )\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route \n            { ...rest }\n\n            component={ (props) => (\n\n                (!isAuthenticated) \n                ? (<Component { ...props } />)\n\n                : (<Redirect to=\"/\" />)\n\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    localStorage.setItem('lastPath', rest.location.pathname)\n\n    return (\n        <Route \n            { ...rest }\n\n            component={ (props) => (\n\n                (isAuthenticated) \n                ? (<Component { ...props } />)\n\n                : (<Redirect to=\"/auth/login\" />)\n\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const Loading = () => {\n    return (\n        <div className=\"loading__main\"> \n\n            <div>\n                \n                <div className=\"loading__spinner\"></div>\n                \n                <span>Validando sesión...</span>\n\n            </div>      \n            \n        </div>\n    )\n}\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n    HashRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\n\nimport { firebase } from '../firebase/firebase-config'\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { startLoadingNotes } from '../actions/notes';\nimport { Loading } from '../components/loading/Loading';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [ checking, setChecking ] = useState(true);\n    const [ isLoggedIn, setIsLoggedIn] = useState(false);\n\n\n    useEffect(() => {\n        \n        firebase.auth().onAuthStateChanged( async (user) => {\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName));\n                setIsLoggedIn(true);\n\n                try {\n                    await dispatch(startLoadingNotes(user.uid));\n                } catch (error) {   \n                    console.log(error);\n                }\n                \n\n            } else {\n                setIsLoggedIn(false);\n            }\n\n            setChecking(false);\n        });\n\n\n\n    }, [ dispatch, setChecking, setIsLoggedIn ]);\n\n    if (checking) {\n        return (<Loading />)\n    }\n\n    return (\n        <Router>\n\n            <div>\n                \n                <Switch>\n                    \n                    <PublicRoute\n                        isAuthenticated={ isLoggedIn }\n                        component={ AuthRouter }\n                        path=\"/auth\"                    \n                    />\n\n                    <PrivateRoute\n                        isAuthenticated={ isLoggedIn }\n                        component={ JournalScreen }\n                        path=\"/:noteId?\"\n                        exact                    \n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                    {/* <Route path=\"/auth\" component={ AuthRouter } />\n\n                    <Route exact path=\"/\" component={ JournalScreen } /> \n\n                    <Redirect to=\"/auth/login\" />*/}\n\n                </Switch>\n            \n            </div>\n\n        </Router>\n    )\n}","/*\n    {\n        notes: [],\n        active: null,\n        active: {\n            id: 'dfsdfsdsaf,\n            title: '',\n            body: '',\n            imageUrl: '',\n            date: 235435434\n        }\n    }\n\n\n\n*/\n\nimport { types } from \"../types/types\";\n\nconst initalState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = (state = initalState, action) => {\n    switch (action.type) {\n\n        case types.notesActive:\n\n            return {\n                ...state,\n                active: { // o active: action.payload\n                    ...action.payload\n                }\n            };\n\n        case types.notesNewEntry:\n            \n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n\n        case types.notesLoad:\n            \n            return {\n                ...state,\n                notes: [...action.payload],\n                \n            };\n\n        case types.notesUpdate:\n\n            return {\n                ...state,\n                notes: state.notes.map((note) => {\n                    if (action.payload.id === note.id) {\n                        return action.payload.note\n                    } else { \n                        return note;\n                    }\n                })\n\n                //notes: state.notes.map( note => action.payload.id === note.id ? action.payload.note : note)\n            }\n\n        case types.notesDeleted:\n\n            return {\n                ...state,\n                notes: state.notes.filter(note => note.id !== action.payload),\n                active: null\n            }\n\n        case types.notesLogoutCleaning:\n\n            return {\n                notes: [],\n                active: null\n            }\n\n        case types.notesInactives:\n            return {\n                ...state,\n                active: null\n            }\n            \n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n};\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            };\n\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            };\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            };\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            };\n    \n        default:\n            return state;\n    }\n\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(thunk))\n);","/*\n    {\n        uid: 21312323,\n        name: 'Iván'\n    }\n\n*/\n\n// para llamar a los casos del switch se utiliza el dispatch, en donde se le pasa como parámetro alguna función definida en los actions. Luego el disptach interactúa con el store\n\nimport { types } from \"../types/types\";\n\n\nexport const authReducer = (state = {}, action) => {\n\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n            \n        case types.logout:\n            return {};\n    \n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nimport 'animate.css';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store } >\n            <AppRouter />\n        </Provider>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  \t<JournalApp />,\n  \tdocument.getElementById('root')\n);"],"sourceRoot":""}